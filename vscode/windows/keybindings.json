// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "ctrl+`",
        "command": "-workbench.action.terminal.toggleTerminal"
    },
    // {
    //     "key": "alt+q",
    //     "command": "workbench.action.quickOpenNavigateNextInEditorPicker",
    //     "when": "inEditorsPicker && inQuickOpen"
    // },
    // {
    //     "key": "shift+alt+q",
    //     "command": "workbench.action.quickOpenNavigatePreviousInEditorPicker",
    //     "when": "inEditorsPicker && inQuickOpen"
    // },
    {
        "key": "ctrl+shift+s",
        "command": "-r.runSource",
        "when": "editorTextFocus && editorLangId == 'r'"
    },
    {
        "key": "shift+alt+w",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    // {
    //     "key": "escape",
    //     "command": "closeFindWidget",
    //     "when": "editorFocus && editorTextFocus"
    // },
    {
        "key": "shift+escape",
        "command": "closeFindWidget",
        "when": "editorFocus && editorTextFocus"
    },
    {
        "key": "tab",
        "command": "tab",
        "when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "shift+tab",
        "command": "outdent",
        "when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "alt+k",
        "command": "workbench.action.navigateUp"
    },
    {
        "key": "alt+j",
        "command": "workbench.action.navigateDown"
    },
    {
        "key": "alt+l",
        "command": "workbench.action.navigateRight"
    },
    {
        "key": "shift+enter",
        "command": "-python.datascience.runcurrentcelladvance",
        "when": "editorTextFocus && python.datascience.featureenabled && python.datascience.hascodecells && !editorHasSelection"
    },
    {
        "key": "shift+enter",
        "command": "-python.datascience.execSelectionInteractive",
        "when": "editorTextFocus && python.datascience.featureenabled && python.datascience.ownsSelection && !findInputFocussed && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "shift+enter",
        "command": "-python.execSelectionInTerminal",
        "when": "editorTextFocus && !findInputFocussed && !python.datascience.ownsSelection && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "alt+q",
        "command": "workbench.action.quickOpenPreviousRecentlyUsedEditor"
    },
    {
        "key": "shift+alt+q",
        "command": "workbench.action.quickOpenLeastRecentlyUsedEditor"
    },
    {
        "key": "alt+q",
        "command": "workbench.action.quickOpenNavigateNext",
        "when": "inEditorsPicker && inQuickOpen"
    },
    {
        "key": "shift+alt+q",
        "command": "workbench.action.quickOpenNavigatePrevious",
        "when": "inEditorsPicker && inQuickOpen"
    },
    {
        "key": "ctrl+shift+w",
        "command": "-workbench.action.closeWindow"
    },
    {
        "key": "ctrl+k ctrl+shift+w",
        "command": "-workbench.action.closeAllGroups"
    },
    {
        "key": "escape",
        "command": "closeParameterHints",
        "when": "parameterHintsVisible"
    },
    {
        "key": "escape",
        "command": "-closeParameterHints",
        "when": "editorFocus && parameterHintsVisible"
    },
    {
        "key": "shift+escape",
        "command": "closeParameterHints",
        "when": "parameterHintsVisible"
    },
    {
        "key": "shift+escape",
        "command": "-closeParameterHints",
        "when": "editorFocus && parameterHintsVisible"
    },
    {
        "key": "ctrl+tab",
        "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+tab",
        "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "-workbench.action.quickOpenNavigatePreviousInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen"
    },
    // {
    //     "key": "ctrl+tab",
    //     "command": "workbench.action.nextEditor"
    // },
    // {
    //     "key": "ctrl+pagedown",
    //     "command": "-workbench.action.nextEditor"
    // },
    // {
    //     "key": "ctrl+shift+tab",
    //     "command": "workbench.action.previousEditor"
    // },
    // {
    //     "key": "ctrl+pageup",
    //     "command": "-workbench.action.previousEditor"
    // },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.quickOpenPreviousRecentlyUsedEditor"
    },
    {
        "key": "shift+ctrl+tab",
        "command": "workbench.action.quickOpenLeastRecentlyUsedEditor"
    },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.quickOpenNavigateNext",
        "when": "inEditorsPicker && inQuickOpen"
    },
    {
        "key": "shift+ctrl+tab",
        "command": "workbench.action.quickOpenNavigatePrevious",
        "when": "inEditorsPicker && inQuickOpen"
    },
    {
        "key": "ctrl+pagedown",
        "command": "-extension.vim_ctrl+pagedown",
        "when": "editorTextFocus && vim.active && vim.use<C-pagedown> && !inDebugRepl"
    },
    {
        "key": "ctrl+pageup",
        "command": "-extension.vim_ctrl+pageup",
        "when": "editorTextFocus && vim.active && vim.use<C-pageup> && !inDebugRepl"
    },
    {
        "key": "f11",
        "command": "workbench.action.toggleFullScreen",
        "when": "!inDebugMode"
    },
    {
        "key": "f11",
        "command": "-workbench.action.toggleFullScreen"
    },
    {
        "key": "shift+f11",
        "command": "workbench.action.toggleZenMode",
        "when": "!inDebugMode"
    },
    {
        "key": "shift+f11",
        "command": "-workbench.action.toggleZenMode"
    },
    {
        "key": "ctrl+shift+d",
        "command": "-editor.action.copyLinesDownAction",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+f4",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+f4",
        "command": "-workbench.action.closeGroup",
        "when": "activeEditorGroupEmpty && multipleEditorGroups"
    },
    {
        "key": "ctrl+shift+f5",
        "command": "workbench.action.debug.start",
        "when": "debuggersAvailable && !inDebugMode"
    },
    {
        "key": "Enter",
        "command": "breadcrumbs.selectFocused",
        "when": "breadcrumbsActive && breadcrumbsVisible && !(inDebugRepl && textInputFocus)"
    },
    {
        "key": "enter",
        "command": "-breadcrumbs.selectFocused",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "Tab",
        "command": "breadcrumbs.selectFocused",
        "when": "breadcrumbsActive && breadcrumbsVisible && inDebugRepl && textInputFocus"
    },
    {
        "key": "shift+enter",
        "command": "editor.debug.action.selectionToRepl",
        "when": "editorTextFocus && !findInputFocussed && !notebookEditorFocused && !python.datascience.ownsSelection && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "shift+enter",
        "command": "-python.execSelectionInTerminal",
        "when": "editorTextFocus && !findInputFocussed && !notebookEditorFocused && !python.datascience.ownsSelection && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "ctrl+d",
        "command": "-extension.vim_ctrl+d",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
    },
    {
        "key": "alt+h",
        "command": "-gitlens.showQuickFileHistory",
        "when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
    },
    {
        "key": "ctrl+alt+f5",
        "command": "workbench.action.debug.selectandstart",
        "when": "debuggersAvailable && !inDebugMode",
    },
    {
        "key": "ctrl+d",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+d",
        "command": "-editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "alt+d",
        "command": "extension.vim_ctrl+d",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
    },
    {
        "key": "ctrl+u",
        "command": "-cursorUndo",
        "when": "textInputFocus"
    },
    {
        "key": "alt+u",
        "command": "extension.vim_ctrl+u",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
    },
    {
        "key": "ctrl+u",
        "command": "-extension.vim_ctrl+u",
        "when": "editorTextFocus && vim.active && vim.use<C-u> && !inDebugRepl"
    },
    {
        "key": "f8",
        "command": "workbench.action.debug.continue",
        "when": "inDebugMode"
    },
    {
        "key": "alt+f8",
        "command": "editor.action.marker.next",
        "when": "!inDebugMode && editorFocus"
    },
    {
        "key": "alt+f8",
        "command": "-editor.action.marker.next",
        "when": "editorFocus"
    },
    {
        "key": "f8",
        "command": "editor.action.marker.nextInFiles",
        "when": "!inDebugMode && editorFocus"
    },
    {
        "key": "f8",
        "command": "-editor.action.marker.nextInFiles",
        "when": "editorFocus"
    },
    {
        "key": "shift+alt+f8",
        "command": "editor.action.marker.prev",
        "when": "!inDebugMode && editorFocus"
    },
    {
        "key": "shift+alt+f8",
        "command": "-editor.action.marker.prev",
        "when": "editorFocus"
    },
    {
        "key": "shift+f8",
        "command": "editor.action.marker.prevInFiles",
        "when": "!inDebugMode && editorFocus"
    },
    {
        "key": "shift+f8",
        "command": "-editor.action.marker.prevInFiles",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+k ctrl+l",
        "command": "-editor.action.transformToLowercase",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+a",
        "command": "editor.emmet.action.incrementNumberByOne",
        "when": "editorTextFocus && !inDebugRepl"
    },
    {
        "key": "alt+x",
        "command": "editor.emmet.action.decrementNumberByOne",
        "when": "editorTextFocus && !inDebugRepl"
    },
    {
        "key": "ctrl+shift+g",
        "command": "-workbench.view.scm",
        "when": "workbench.scm.active"
    },
    {
        "key": "ctrl+shift+g",
        "command": "workbench.view.extension.gitlens"
    },
    {
        "key": "ctrl+alt+c",
        "command": "editor.action.clipboardCopyWithSyntaxHighlightingAction"
    },
    {
        "key": "ctrl+pagedown",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "escape",
        "command": "-calva.clearInlineResults",
        "when": "calva:keybindingsEnabled && editorTextFocus && !editorHasMultipleSelections && !editorHasSelection && !editorReadOnly && !hasOtherSuggestions && !parameterHintsVisible && !selectionAnchorSet && !suggestWidgetVisible && editorLangId == 'clojure'"
    },
    {
        "key": "alt+s",
        "command": "calva.clearInlineResults"
    },
    {
        "key": "alt+m",
        "command": "gitlens.toggleFileHeatmap"
    },
    {
        "key": "alt+m",
        "command": "-extension.minifyJSON"
    },
    {
        "key": "alt+f",
        "command": "gitlens.toggleFileChanges"
    },
    {
        "key": "ctrl+k ctrl+shift+s",
        "command": "workbench.action.files.save"
    },
    {
        "key": "ctrl+s",
        "command": "-workbench.action.files.save"
    },
    {
        "key": "ctrl+s",
        "command": "workbench.action.files.saveWithoutFormatting"
    },
    {
        "key": "ctrl+k ctrl+shift+s",
        "command": "-workbench.action.files.saveWithoutFormatting"
    },
    {
        "key": "ctrl+shift+;",
        "command": "-breadcrumbs.focus",
        "when": "breadcrumbsPossible"
    }
]